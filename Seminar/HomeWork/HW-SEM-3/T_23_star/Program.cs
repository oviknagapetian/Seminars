// Напишите программу, которая принимает на вход число (N) и выдаёт таблицу кубов чисел от 1 до N.
// 3 -> 1, 8, 27
// 5 -> 1, 8, 27, 64, 125
// * Вывести таблицу с границами и значениями друг над другом



// Функция ReadData считывает целое число с консоли и возвращает его.
int ReadData(string message) 
{ 
    Console.WriteLine(message); 
    int res;
    while(!int.TryParse(Console.ReadLine(), out res))
    {
        Console.WriteLine("Ошибка ввода! Введен недопустимый параметр."); // Если ввод пользователя не является целым числом, функция будет запрашивать ввод до тех пор, пока не будет получено корректное значение.
    }
    return res;
}
// Функция LineGen генерирует строку с квадратами чисел от 1 до num, возведенными в степень pow.
string LineGen(int num, int pow) 
{
    string res = "";
    for (int i = 1; i <= num; i++)
    {
        res += string.Format("{0,7} ", Math.Pow(i, pow)); // Функция форматирует вывод в виде строки шириной в 4 символа с пробелом в конце каждого числа.
    }
    return res;
}

// Считываем число N и выводим таблицу квадратов чисел от 1 до N, с границами и значениями разделенными по строкам.
int numN = ReadData("Введите число N:");
Console.WriteLine(" --------" + new string('-', numN * 8)); //Выводим верхнюю границу таблицы
Console.WriteLine("|   N   |" + LineGen(numN, 1) + "|"); //Выводим строку с квадратами чисел, возведенными в степень 1
Console.WriteLine(" ....... " + new string('.', numN * 8)); //Выводим сред. границу таблицы
Console.WriteLine("|  N^3  |" + LineGen(numN, 3) + "|"); //Выводим строку с квадратами чисел, возведенными в степень 3
Console.WriteLine(" --------" + new string('-', numN * 8)); //Выводим нижнюю границу таблицы
